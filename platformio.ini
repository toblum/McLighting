[platformio]
src_dir = ./Arduino/McLighting/
data_dir = ./Arduino/McLighting/data/
env_default = nodemcuv2
description = The ESP8266 based multi-client lighting gadget

[common]
# ------------------------------------------------------------------------------
# PLATFORM:
#   !! DO NOT confuse platformio's ESP8266 development platform with Arduino core for ESP8266
#   We use Arduino Core 2.5.0 (platformIO 2.0.4) as default
#
#   arduino core 2.3.0 = platformIO 1.5.0
#   arduino core 2.4.0 = platformIO 1.6.0
#   arduino core 2.4.1 = platformIO 1.7.3
#   arduino core 2.4.2 = platformIO 1.8.0
#   arduino core 2.5.0 = platformIO 2.0.4
#   arduino core stage = platformIO feature#stage
# ------------------------------------------------------------------------------
arduino_core_2_3_0 = espressif8266@1.5.0
arduino_core_2_4_0 = espressif8266@1.6.0
arduino_core_2_4_1 = espressif8266@1.7.3
arduino_core_2_4_2 = espressif8266@1.8.0
arduino_core_2_5_0 = espressif8266@2.0.4
arduino_core_stage = https://github.com/platformio/platform-espressif8266.git#feature/stage

framework = arduino
platform = ${common.arduino_core_2_4_2}
; platform = ${common.arduino_core_2_5_0}

build_flags =
  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
  -DMQTT_MAX_PACKET_SIZE=512 ; PubSubClient Specific flags
  -w ; supress all warnings
monitor_speed = 115200
board_build.flash_mode = dout
upload_speed = 115200
upload_resetmethod = nodemcu
lib_deps =
  https://github.com/tzapu/WiFiManager.git#440f312
  AsyncMqttClient@0.8.2
  ArduinoJson@6.14.0
  WS2812FX@1.2.2
  NeoPixelBus@2.5.6
  WebSockets@2.2.0
  ESPAsyncE131@1.0.1
  https://github.com/me-no-dev/ESPAsyncUDP#697c75a
  ;PubSubClient ;neede for #define ENABLE_MQTT
  ;FastLED      ;needed for #define CUSTOM_WS2812FX_ANIMATIONS
targets_eum = erase, upload, monitor
targets_um = upload, monitor

[env:nodemcuv2]
board = nodemcuv2
framework = ${common.framework}
platform = ${common.platform}
build_flags = 
  ${common.build_flags}
  ; -Wl,-Teagle.flash.4m3m.ld  ;;;; Required for core > v2.5.0 or staging version
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
lib_deps = ${common.lib_deps}
; targets = ${common.targets_um}

[env:esp01_1m]
board = esp01_1m
framework = ${common.framework}
platform = ${common.platform}
build_flags = ${common.build_flags} -D D1=2
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
board_build.flash_mode = dout
lib_deps = ${common.lib_deps}